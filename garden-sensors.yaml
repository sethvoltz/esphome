substitutions:
  device_name: garden-sensors
  device_id: garden_sensors
  friendly_name: Garden Sensors
  device_description: Depth and temperature sensors for hydroponic tanks

esphome:
  name: ${device_name}
  comment: ${device_description}

esp32:
  board: esp32dev
  framework:
    type: esp-idf

i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret garden_sensors_api_key

ota:
  password: !secret garden_sensors_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Garden-Sensors Fallback Hotspot"
    password: !secret garden_sensors_hotspot_password

captive_portal:

dallas:
  - pin: GPIO23

ads1115:
  - address: 0x48

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime"

  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

  - platform: am2320
    setup_priority: -100 # This sensor is slow to initialize
    temperature:
      name: "Garden Sensor Box Temperature"
    humidity:
      name: "Garden Sensor Box Humidity"

  - platform: dallas
    address: 0x2b03019794341228
    name: "Tank Right Temperature"
    unit_of_measurement: "°C"

  - platform: dallas
    address: 0x5b030e979460de28
    name: "Tank Left Temperature"
    unit_of_measurement: "°C"

  - platform: ads1115
    id: garden_sensor_tank_right_depth
    multiplexer: 'A0_GND'
    gain: 2.048 # up to 2.048V
    name: "Tank Right Depth"
    # update_interval: 15s
    unit_of_measurement: "mm"
    filters:
      # depth = ((voltage * to_mV / 120_ohm) - current_init_mA) * (range_mm / water_density / 16.0)
      # offset_mm is a calibration factor based on the voltage reference from crappy power supplies
      - lambda: return (((x * 1000.0 / 120.0) - 4.0) * (1000.0 / 1.0 / 16.0));
      - offset: -50.0

  - platform: template
    id: garden_sensor_tank_right_depth_percent
    name: "Tank Right Depth (%)"
    state_class: measurement
    unit_of_measurement: "%"
    lambda: |-
      return id(garden_sensor_tank_right_depth).state;
    filters:
      - calibrate_linear:
        - 50.0 -> 0.0
        - 290.0 -> 100.0
      - clamp:
          min_value: 0.0
          max_value: 100.0
  
  - platform: ads1115
    id: garden_sensor_tank_left_depth
    multiplexer: 'A1_GND'
    gain: 2.048 # up to 2.048V
    name: "Tank Left Depth"
    # update_interval: 15s
    unit_of_measurement: "mm"
    filters:
      # depth = ((voltage * to_mV / 120_ohm) - current_init_mA) * (range_mm / water_density / 16.0)
      # offset_mm is a calibration factor based on the voltage reference from crappy power supplies
      - lambda: return (((x * 1000.0 / 120.0) - 4.0) * (1000.0 / 1.0 / 16.0));
      - offset: -50.0
  
  - platform: template
    id: garden_sensor_tank_left_depth_percent
    name: "Tank Left Depth (%)"
    state_class: measurement
    unit_of_measurement: "%"
    lambda: |-
      return id(garden_sensor_tank_left_depth).state;
    filters:
      - calibrate_linear:
        - 50.0 -> 0.0
        - 330.0 -> 100.0
      - clamp:
          min_value: 0.0
          max_value: 100.0


mqtt:
  broker: !secret mqtt_broker
  port: !secret mqtt_port
  username: !secret garden_sensors_mqtt_username
  password: !secret garden_sensors_mqtt_password
  birth_message:
    topic: garden-sensors/status
    payload: online
  will_message:
    topic: garden-sensors/status
    payload: offline
  idf_send_async: true
  skip_cert_cn_check: false
  <<: !include letsencrypt_chain.yaml
