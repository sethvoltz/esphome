esphome:
  name: garden-sensors

esp32:
  board: esp32dev
  framework:
    type: esp-idf

i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret garden_sensors_api_key

ota:
  password: !secret garden_sensors_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Garden-Sensors Fallback Hotspot"
    password: !secret garden_sensors_hotspot_password

captive_portal:

dallas:
  - pin: GPIO23

ads1115:
  - address: 0x48

sensor:
  - platform: dallas
    address: 0x2b03019794341228
    name: "Tank Right Temperature"
    unit_of_measurement: "°C"
  - platform: dallas
    address: 0x5b030e979460de28
    name: "Tank Left Temperature"
    unit_of_measurement: "°C"
  - platform: ads1115
    multiplexer: 'A0_GND'
    gain: 2.048 # up to 2.048V
    name: "Tank Right Depth"
    unit_of_measurement: "mm"
    filters:
      # depth = ((voltage * to_mV / 120_ohm) - current_init_mA) * (range_mm / water_density / 16.0)
      - lambda: return ((x * 1000.0 / 120.0) - 4.0) * (5000.0 / 1.0 / 16.0);
  - platform: ads1115
    multiplexer: 'A1_GND'
    gain: 2.048 # up to 2.048V
    name: "Tank Left Depth"
    unit_of_measurement: "mm"
    filters:
      # depth = ((voltage * to_mV / 120_ohm) - current_init_mA) * (range_mm / water_density / 16.0)
      - lambda: return ((x * 1000.0 / 120.0) - 4.0) * (5000.0 / 1.0 / 16.0);

mqtt:
  broker: !secret mqtt_broker
  port: !secret mqtt_port
  username: garden_sensors
  password: !secret garden_sensors_mqtt_password
  birth_message:
    topic: garden-sensors/status
    payload: online
  will_message:
    topic: garden-sensors/status
    payload: offline
  idf_send_async: true
  skip_cert_cn_check: false
  certificate_authority: |
    -----BEGIN CERTIFICATE-----
    MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
    TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
    cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
    WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
    RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
    R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
    sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
    NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
    Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
    /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
    AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
    Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
    FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
    AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
    Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
    gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
    PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
    ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
    CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
    lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
    avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
    yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
    yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
    hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
    HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
    MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
    nLRbwHOoq7hHwg==
    -----END CERTIFICATE-----

